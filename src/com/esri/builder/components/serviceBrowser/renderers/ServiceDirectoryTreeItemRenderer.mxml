<?xml version="1.0" encoding="utf-8"?>
<!--
  //////////////////////////////////////////////////////////////////
  // Copyright (c) 2008-2013 Esri. All Rights Reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //    http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  ////////////////////////////////////////////////////////////////
-->
<s:MXTreeItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark">
    <fx:Script>
        <![CDATA[
            import com.esri.builder.components.serviceBrowser.nodes.EmptyNode;
            import com.esri.builder.components.serviceBrowser.nodes.ErrorNode;
            import com.esri.builder.components.serviceBrowser.nodes.LoadingNode;

            override public function set data(value:Object):void
            {
                super.data = value;
                invalidateRendererState();
            }

            override protected function getCurrentRendererState():String
            {
                var stateName:String;

                if (data is LoadingNode)
                {
                    stateName = "loading";
                }
                else if (data is EmptyNode)
                {
                    stateName = "empty";
                }
                else if (data is ErrorNode)
                {
                    stateName = "error";
                }
                else
                {
                    stateName = super.getCurrentRendererState();
                }

                return stateName;
            }

            override protected function commitProperties():void
            {
                super.commitProperties();

                if (disclosureIcon.visible &&
                    disclosureIcon.layoutDirection != layoutDirection)
                {
                    disclosureIcon.layoutDirection = layoutDirection;
                }
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="hovered"/>
        <s:State name="selected"/>
        <s:State name="loading"/>
        <s:State name="empty"/>
        <s:State name="error"/>
    </s:states>

    <s:HGroup left="0" right="0" top="0" bottom="0"
              verticalAlign="middle">
        <s:Rect id="indentationSpacer"
                width="{treeListData.indent}"
                alpha="0"
                percentHeight="100">
            <s:fill>
                <s:SolidColor color="0xFFFFFF"/>
            </s:fill>
        </s:Rect>

        <s:Group id="disclosureGroup">
            <s:BitmapImage id="disclosureIcon"
                           source="{treeListData.disclosureIcon}"
                           visible="{treeListData.hasChildren}"/>
        </s:Group>

        <s:BitmapImage source="{treeListData.icon}"/>

        <s:Label id="labelField"
                 color.empty="0x7F7F7F"
                 color.error="0x7F7F7F"
                 excludeFrom="loading"
                 paddingTop="2"
                 styleName.empty="emphasisText"
                 styleName.error="emphasisText"
                 text="{treeListData.label}"/>

        <s:SWFLoader width="10" height="10"
                     autoLoad="true"
                     includeIn="loading"
                     source="@Embed(source='/assets/images/ico_loading.swf')"/>
    </s:HGroup>
</s:MXTreeItemRenderer>
