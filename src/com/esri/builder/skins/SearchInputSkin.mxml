<?xml version="1.0" encoding="utf-8"?>
<!--
  //////////////////////////////////////////////////////////////////
  // Copyright (c) 2008-2013 Esri. All Rights Reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //    http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  ////////////////////////////////////////////////////////////////
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx">
    <!-- host component -->
    <fx:Metadata>
        [HostComponent("com.esri.builder.components.SearchInput")]
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
            {
                super.updateDisplayList(unscaledWidth, unscaledHeight);

                var direction:String = hostComponent.getStyle("direction");
                if (direction)
                {
                    searchTextInput.setStyle("direction", direction);
                }
            }
        ]]>
    </fx:Script>

    <!-- states -->
    <s:states>
        <s:State name="normal"/>
        <s:State name="suggesting"/>
    </s:states>

    <!-- SkinParts
    name=searchButton, type=spark.components.Button, required=false
    name=searchTextInput, type=spark.components.TextInput, required=true
    name=suggestionList, type=spark.components.List, required=true
    -->

    <s:layout>
        <s:HorizontalLayout/>
    </s:layout>

    <s:VGroup width="100%" height="100%"
              gap="0"
              verticalAlign="middle">

        <s:TextInput id="searchTextInput"
                     width="100%"
                     toolTip="{hostComponent.searchTextInputToolTip}"/>

        <s:PopUpAnchor id="suggestionPopUp"
                       width="100%"
                       displayPopUp.suggesting="true"
                       popUpWidthMatchesAnchorWidth="true">

            <s:List id="suggestionList"
                    width="100%"
                    contentBackgroundAlpha="1"
                    contentBackgroundColor="0xFFFFFF"
                    horizontalScrollPolicy="off"
                    labelField="text"
                    tabFocusEnabled="false">
                <s:layout>
                    <s:VerticalLayout requestedRowCount="{suggestionList.dataProvider.length}"/>
                </s:layout>
                <s:itemRenderer>
                    <fx:Component>
                        <s:ItemRenderer width="100%" autoDrawBackground="true">
                            <s:Label id="labelDisplay"
                                     width="100%" height="22"
                                     left="5"
                                     maxDisplayedLines="1"/>
                        </s:ItemRenderer>
                    </fx:Component>
                </s:itemRenderer>
            </s:List>

        </s:PopUpAnchor>

    </s:VGroup>

    <s:Button id="searchButton"
              enabled="{hostComponent.hasText}"
              label="{hostComponent.searchButtonLabel}"
              toolTip="{hostComponent.searchButtonToolTip}"/>

</s:Skin>
