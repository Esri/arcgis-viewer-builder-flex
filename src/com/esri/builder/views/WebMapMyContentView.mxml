<?xml version="1.0" encoding="utf-8"?>
<!--
  //////////////////////////////////////////////////////////////////
  // Copyright (c) 2008-2013 Esri. All Rights Reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //    http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  ////////////////////////////////////////////////////////////////
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:views="com.esri.builder.views.*"
         width="100%" height="100%"
         add="this_addHandler(event)">
    <fx:Script>
        <![CDATA[
            import com.esri.ags.portal.Portal;
            import com.esri.builder.eventbus.AppEvent;
            import com.esri.builder.model.PortalModel;

            import mx.events.FlexEvent;

            private var portal:Portal = PortalModel.getInstance().portal;

            protected function this_addHandler(event:FlexEvent):void
            {
                currentState = "mymaps";
                AppEvent.addListener(AppEvent.PORTAL_STATUS_UPDATED, portalStatusUpdatedHandler);
            }

            protected function myGroups_clickHandler(event:MouseEvent):void
            {
                currentState = "mygroups";
                if (myGroupsView)
                {
                    myGroupsView.currentState = "normal";
                }
            }

            private function portalStatusUpdatedHandler(event:AppEvent):void
            {
                if (!portal.user)
                {
                    currentState = "normal";
                }
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="mygroups"/>
        <s:State name="mymaps"/>
    </s:states>

    <s:Rect left="0" right="0" top="0" bottom="0">
        <s:stroke>
            <s:SolidColorStroke color="0x000000"/>
        </s:stroke>
    </s:Rect>

    <s:HGroup width="100%" height="100%"
              gap="0"
              verticalAlign="top">
        <s:VGroup height="100%"
                  horizontalAlign="center"
                  minWidth="87"
                  paddingTop="10">
            <s:Label height="20"
                     buttonMode="true"
                     buttonMode.mygroups="false"
                     click="myGroups_clickHandler(event)"
                     color.mygroups="0x217598"
                     fontWeight.mygroups="bold"
                     paddingLeft="4"
                     paddingRight="4"
                     text="{resourceManager.getString('BuilderStrings', 'agsPortal.myGroups')}"
                     textDecoration="underline"
                     textDecoration.mygroups="none"/>

            <s:Line width="100%">
                <s:stroke>
                    <s:SolidColorStroke color="0x000000"/>
                </s:stroke>
            </s:Line>

            <s:Label height="20"
                     buttonMode="true"
                     buttonMode.mymaps="false"
                     click="currentState = 'mymaps'"
                     color.mymaps="0x217598"
                     fontWeight.mymaps="bold"
                     text="{resourceManager.getString('BuilderStrings', 'agsPortal.myMaps')}"
                     textDecoration="underline"
                     textDecoration.mymaps="none"/>
        </s:VGroup>

        <s:Line height="100%">
            <s:stroke>
                <s:SolidColorStroke color="0x000000"/>
            </s:stroke>
        </s:Line>

        <s:Group width="100%" height="100%">
            <views:WebMapMyGroupsView id="myGroupsView"
                                      left="0" right="0" top="10" bottom="0"
                                      includeIn="mygroups"/>

            <views:WebMapMyMapsView left="0" right="0" top="10" bottom="0"
                                    includeIn="mymaps"/>
        </s:Group>
    </s:HGroup>
</s:Group>
