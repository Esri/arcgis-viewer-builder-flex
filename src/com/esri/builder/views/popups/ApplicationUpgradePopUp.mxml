<?xml version="1.0" encoding="utf-8"?>
<!--
  //////////////////////////////////////////////////////////////////
  // Copyright (c) 2008-2013 Esri. All Rights Reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //    http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  ////////////////////////////////////////////////////////////////
-->
<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
                           xmlns:s="library://ns.adobe.com/flex/spark"
                           xmlns:mx="library://ns.adobe.com/flex/mx"
                           minHeight="150"
                           minWidth="450"
                           open="setFocus()">
    <fx:Script>
        <![CDATA[
            import com.esri.builder.eventbus.AppEvent;
            import com.esri.builder.model.Model;
            import com.esri.builder.model.ViewerApp;

            import mx.managers.PopUpManager;
            import mx.utils.StringUtil;

            [Bindable]
            public var appToUpgrade:ViewerApp;

            [Bindable]
            public var conclusionText:String;

            private function dispatchUpgradeAndShowProgress():void
            {
                currentState = "inProgress";
                AppEvent.addListener(AppEvent.UPGRADE_APP_COMPLETE, appUpgradeCompleteHandler);
                AppEvent.addListener(AppEvent.UPGRADE_APP_FAILED, appUpgradeFailedHandler);

                //TODO: use Timer
                setTimeout(dispatchUpgradeAppEvent, 250);
            }

            private function appUpgradeCompleteHandler(event:AppEvent):void
            {
                AppEvent.removeListener(AppEvent.UPGRADE_APP_COMPLETE, appUpgradeCompleteHandler);
                AppEvent.removeListener(AppEvent.UPGRADE_APP_FAILED, appUpgradeFailedHandler);
                conclusionText = resourceManager.getString('BuilderStrings', 'upgradeApplicationPopUp.success');
                currentState = "finished";
                updatePopUpPosition();
            }

            private function appUpgradeFailedHandler(event:AppEvent):void
            {
                var errorMessage:String = event.data as String;
                AppEvent.removeListener(AppEvent.UPGRADE_APP_COMPLETE, appUpgradeCompleteHandler);
                AppEvent.removeListener(AppEvent.UPGRADE_APP_FAILED, appUpgradeFailedHandler);
                conclusionText = StringUtil.substitute(resourceManager.getString('BuilderStrings', 'upgradeApplicationPopUp.failure'), errorMessage);
                currentState = "finished";
                updatePopUpPosition();
            }

            private function dispatchUpgradeAppEvent():void
            {
                AppEvent.dispatch(AppEvent.UPGRADE_APP, appToUpgrade);
            }

            override public function updatePopUpPosition():void
            {
                PopUpManager.centerPopUp(this);
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="prompt"/>
        <s:State name="inProgress"/>
        <s:State name="finished"/>
    </s:states>

    <!--background-->
    <s:Rect left="0" right="0" top="0" bottom="0">
        <s:fill>
            <s:SolidColor color="#FFFFFF"/>
        </s:fill>

        <s:stroke>
            <s:SolidColorStroke caps="none"
                                color="#000000"
                                joints="miter"
                                miterLimit="4"
                                weight="2"/>
        </s:stroke>
    </s:Rect>

    <s:Rect height="25"
            left="2" right="2" top="2">
        <s:fill>
            <s:LinearGradient rotation="90">
                <s:GradientEntry alpha="1"
                                 color="#FFFFFF"
                                 ratio="0"/>
                <s:GradientEntry alpha="1.0"
                                 color="#CCCCCC"
                                 ratio="1"/>
            </s:LinearGradient>
        </s:fill>
    </s:Rect>

    <s:Line left="0" right="0" top="26">
        <s:stroke>
            <s:SolidColorStroke caps="none"
                                color="#000000"
                                joints="miter"
                                miterLimit="4"
                                weight="2"/>
        </s:stroke>
    </s:Line>

    <!--content-->
    <s:Label left="10" top="9"
             color="#000000"
             fontSize="14"
             fontWeight="bold"
             text="{resourceManager.getString('BuilderStrings', 'upgradeApplicationPopUp.title')}"
             textAlign="center"
             verticalAlign="middle"/>

    <s:RichEditableText left="10" right="10"
                        editable="false"
                        horizontalCenter="0"
                        maxWidth="400"
                        text.finished="{conclusionText}"
                        text.inProgress="{resourceManager.getString('BuilderStrings', 'upgradeApplicationPopUp.upgradingApplication')}"
                        text.prompt="{resourceManager.getString('BuilderStrings',
                                                                'upgradeApplicationPopUp.upgradeWarningMessage', 
                                                                [ appToUpgrade.label, Model.SUPPORTED_VIEWER_VERSION ])}"
                        textAlign="center"
                        verticalCenter="0"/>

    <s:SWFLoader width="40" height="40"
                 autoLoad="true"
                 horizontalCenter="0"
                 includeIn="inProgress"
                 source="@Embed(source='/assets/images/ico_loading.swf')"
                 verticalCenter="30"/>

    <s:HGroup bottom="5"
              horizontalAlign="center"
              horizontalCenter="0"
              includeIn="prompt"
              verticalAlign="middle">
        <s:Button click="dispatchUpgradeAndShowProgress()"
                  label="{resourceManager.getString('BuilderStrings', 'upgradeApplicationPopUp.ok')}"
                  skinClass="com.esri.builder.skins.BlueButtonSkin"/>
        <s:Button click="close()"
                  label="{resourceManager.getString('BuilderStrings', 'cancel')}"
                  skinClass="com.esri.builder.skins.LinkButtonSkin"/>
    </s:HGroup>

    <s:Button bottom="5"
              click="close()"
              horizontalCenter="0"
              includeIn="finished"
              label="{resourceManager.getString('BuilderStrings', 'close')}"
              skinClass="com.esri.builder.skins.BlueButtonSkin"/>
</s:SkinnablePopUpContainer>
