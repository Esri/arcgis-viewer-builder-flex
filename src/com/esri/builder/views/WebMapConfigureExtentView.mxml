<?xml version="1.0" encoding="utf-8"?>
<!--
  //////////////////////////////////////////////////////////////////
  // Copyright (c) 2008-2013 Esri. All Rights Reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //    http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  ////////////////////////////////////////////////////////////////
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:components="com.esri.builder.components.*"
         width="100%" height="100%"
         add="this_addHandler(event)">
    <fx:Script>
        <![CDATA[
            import com.esri.builder.components.ConfigureMapExtent;
            import com.esri.builder.model.ImageCache;
            import com.esri.builder.model.Model;
            import com.esri.builder.supportClasses.PortalUtil;

            import mx.events.FlexEvent;

            private var mapExtent:ConfigureMapExtent;

            protected function this_addHandler(event:FlexEvent):void
            {
                if (mapContainer.numElements > 1)
                {
                    mapContainer.removeElementAt(1);
                }
                mapExtent = new ConfigureMapExtent;
                mapExtent.percentHeight = 100;
                mapExtent.percentWidth = 100;
                mapExtent.isWebMap = true;
                mapContainer.addElementAt(mapExtent, 1);
            }

            protected function back_clickHandler(event:MouseEvent):void
            {
                WebMapView(this.parent.parent).currentState = "normal";
            }
        ]]>
    </fx:Script>

    <s:Label left="5" top="2"
             fontSize="14"
             fontWeight="bold"
             text="{resourceManager.getString('BuilderStrings', 'mapsView.customizeMapExtentForSelectedWebMap')}"/>

    <s:Button height="50"
              left="5" top="35"
              click="back_clickHandler(event)"
              fontSize="14"
              label="{resourceManager.getString('BuilderStrings', 'mapsView.backToWebmaps')}"
              skinClass="com.esri.builder.skins.LinkButtonSkin"/>

    <components:TitleContainer width="215" height="250"
                               left="5" top="70"
                               title="{resourceManager.getString('BuilderStrings', 'mapsView.selectedWebMap')}">
        <s:VGroup width="100%" height="200"
                  gap="-20"
                  horizontalAlign="center"
                  paddingTop="20">
            <s:Label width="140"
                     maxDisplayedLines="1"
                     text="{Model.instance.webmap.title}"
                     textAlign="center"/>

            <s:Image id="displayImage"
                     width="210" height="200"
                     contentLoader="{ImageCache.getInstance()}"
                     enableLoadingState="true"
                     source="{PortalUtil.ensureThumbnailURL(Model.instance.webmap.thumbnailURL)}"/>
        </s:VGroup>
    </components:TitleContainer>

    <components:TitleContainer width="100%" height="100%"
                               left="230" right="10" top="30" bottom="10"
                               title="{resourceManager.getString('BuilderStrings', 'mapsView.customizeMapExtent')}">
        <s:VGroup id="mapContainer"
                  width="100%" height="100%"
                  left="2" right="2" top="2" bottom="2"
                  paddingTop="2">
            <s:Label alpha="0.5"
                     fontSize="14"
                     paddingLeft="15"
                     text="{resourceManager.getString('BuilderStrings', 'mapsView.setExtentText')}"/>
        </s:VGroup>
    </components:TitleContainer>
</s:Group>
