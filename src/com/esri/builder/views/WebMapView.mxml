<?xml version="1.0" encoding="utf-8"?>
<!--
  //////////////////////////////////////////////////////////////////
  // Copyright (c) 2008-2013 Esri. All Rights Reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //    http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  ////////////////////////////////////////////////////////////////
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:views="com.esri.builder.views.*"
         width="100%" height="100%"
         add="this_addHandler(event)">
    <fx:Script>
        <![CDATA[
            import com.esri.ags.portal.Portal;
            import com.esri.builder.eventbus.AppEvent;
            import com.esri.builder.model.Model;
            import com.esri.builder.model.PortalModel;

            import mx.events.FlexEvent;

            private var _isConfigXMLSaved:Boolean;
            private var portal:Portal;

            protected function this_addHandler(event:FlexEvent):void
            {
                if (Model.instance.configBasemapsList.hasLayers
                    || Model.instance.configOpsLayerList.hasLayers)
                {
                    clearBasemapAndOpConfigLayers();
                    currentState = "normal";
                    AppEvent.addListener(AppEvent.CONFIG_XML_SAVED, configXMLSaved);
                    AppEvent.dispatch(AppEvent.SAVE_CONFIG_XML);
                }

                // check if the portal is loaded and has a user signed in
                portal = PortalModel.getInstance().portal;
                if (portal.loaded
                    && portal.user
                    && webMapSearch)
                {
                    webMapSearch.currentState = "mycontent";
                }
            }

            private function clearBasemapAndOpConfigLayers():void
            {
                Model.instance.configBasemapsList.removeAllLayers();
                Model.instance.config.configMap.basemaps.removeAllLayers();

                Model.instance.configOpsLayerList.removeAllLayers();
                Model.instance.config.configMap.operationalLayers.removeAllLayers();

                Model.instance.config.configMap.initExtent = null;
            }

            private function configXMLSaved(event:AppEvent):void
            {
                if (event.data == 'webmap')
                {
                    _isConfigXMLSaved = true;
                }
            }

            private function updateAddArcGISBasemaps():void
            {
                Model.instance.config.configMap.addArcGISBasemaps = addArcGISBasemapsCheckBox.selected;
                Model.instance.config.isDirty = true
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="configureMapExtent"/>
    </s:states>

    <s:HGroup left="10" top="10"
              gap="10"
              verticalAlign="bottom">
        <s:Label fontSize="18"
                 styleName="boldText"
                 text="{resourceManager.getString('BuilderStrings', 'mapsView.webmaps')}"/>

        <s:Button buttonMode="true"
                  click="AppEvent.dispatch(AppEvent.SWITCH_MAPS, 'layers')"
                  fontSize="14"
                  label="{resourceManager.getString('BuilderStrings', 'mapsView.switchToLayers')}"
                  skinClass="com.esri.builder.skins.LinkButtonSkin"/>
    </s:HGroup>

    <s:HGroup width="100%" height="100%"
              left="5" top="30">
        <views:WebMapSearch id="webMapSearch"
                            width="60%" height="100%"
                            excludeFrom="configureMapExtent"
                            minHeight="400"
                            minWidth="350"/>

        <s:VGroup width="40%" height="100%"
                  excludeFrom="configureMapExtent"
                  minHeight="400"
                  minWidth="250">
            <views:WebMapActive width="100%"/>

            <s:CheckBox id="addArcGISBasemapsCheckBox"
                        change="updateAddArcGISBasemaps()"
                        fontSize="14"
                        label="{resourceManager.getString('BuilderStrings', 'mapsView.addArcGISBasemaps')}"
                        selected="{Model.instance.config.configMap.addArcGISBasemaps}"
                        styleName="boldText"/>
        </s:VGroup>

        <views:WebMapConfigureExtentView includeIn="configureMapExtent"/>
    </s:HGroup>

    <s:Button right="10" top="10"
              click="AppEvent.dispatch(AppEvent.SAVE_CONFIG_XML, 'webmap')"
              label="{resourceManager.getString('BuilderStrings', 'save')}"
              skinClass="com.esri.builder.skins.BlueSaveButtonSkin"/>
</s:Group>
