<?xml version="1.0" encoding="utf-8"?>
<!--
  //////////////////////////////////////////////////////////////////
  // Copyright (c) 2008-2013 Esri. All Rights Reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //    http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  ////////////////////////////////////////////////////////////////
-->
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                    xmlns:s="library://ns.adobe.com/flex/spark"
                    width="100%"
                    clipAndEnableScrolling="true">
    <fx:Script>
        <![CDATA[
            import com.esri.ags.layers.supportClasses.Field;

            private var selectedField:Field;

            override public function set data(value:Object):void
            {
                super.data = value;
                selectedField = value as Field;
            }

            override public function prepare(hasBeenRecycled:Boolean):void
            {
                if (selectedField)
                {
                    orderByFieldDirectionSelection.enabled = hasSelectedOrderByField;
                    orderByFieldSelection.selected = hasSelectedOrderByField;

                    orderByFieldDirectionSelection.selectedItem =
                        displayFieldsDataGrid.getSortByDirection(selectedField) == OrderByFieldDirection.ASCENDING ?
                        ascendingOrderItem : descendingOrderItem;
                }
            }

            private function get hasSelectedOrderByField():Boolean
            {
                return displayFieldsDataGrid.orderByField == selectedField;
            }

            private function get displayFieldsDataGrid():DisplayFieldsDataGrid
            {
                return grid.dataGrid as DisplayFieldsDataGrid;
            }

            private function updateSelectedOrderByField():void
            {
                const selectedDirection:String = orderByFieldDirectionSelection.selectedItem.value;
                displayFieldsDataGrid.updateOrderByField(selectedField, selectedDirection);
                grid.invalidateDisplayList();
            }

            private function updateOrderByFieldDirection():void
            {
                const selectedDirection:String = orderByFieldDirectionSelection.selectedItem.value;
                displayFieldsDataGrid.updateOrderByField(selectedField, selectedDirection);
                grid.invalidateDisplayList();
            }
        ]]>
    </fx:Script>

    <s:layout>
        <s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
    </s:layout>

    <s:RadioButton id="orderByFieldSelection" change="updateSelectedOrderByField()"/>

    <s:DropDownList id="orderByFieldDirectionSelection"
                    width="50"
                    change="updateOrderByFieldDirection()"
                    requireSelection="true"
                    skinClass="com.esri.builder.skins.DropDownIconListSkin">
        <s:ArrayList>
            <!-- OrderByFieldDirection.ASCENDING -->
            <s:DataItem id="ascendingOrderItem"
                        label="{resourceManager.getString('BuilderStrings','ascending')}"
                        source="assets/images/ascending.png"
                        value="ASC"/>
            <!-- OrderByFieldDirection.DESCENDING -->
            <s:DataItem id="descendingOrderItem"
                        label="{resourceManager.getString('BuilderStrings','descending')}"
                        source="assets/images/descending.png"
                        value="DESC"/>
        </s:ArrayList>

        <s:itemRenderer>
            <fx:Component>
                <s:ItemRenderer>
                    <s:layout>
                        <s:HorizontalLayout paddingLeft="2"
                                            paddingRight="2"
                                            verticalAlign="middle"/>
                    </s:layout>

                    <s:Image source="{data.source}"/>

                    <s:Label text="{data.label}"/>
                </s:ItemRenderer>
            </fx:Component>
        </s:itemRenderer>
    </s:DropDownList>
</s:GridItemRenderer>
