<?xml version="1.0" encoding="utf-8"?>
<!--
  //////////////////////////////////////////////////////////////////
  // Copyright (c) 2008-2013 Esri. All Rights Reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //    http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  ////////////////////////////////////////////////////////////////
-->
<s:Form xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        width="100%">
    <fx:Script>
        <![CDATA[
            import modules.Geoprocessing.parameters.BaseParameter;

            import mx.collections.ArrayList;

            import spark.events.IndexChangeEvent;

            [Bindable]
            private var hasChoiceList:Boolean;
            [Bindable]
            public var choiceListOptions:ArrayList = new ArrayList();
            [Bindable]
            public var selectedChoiceIndex:int;

            [Bindable]
            public var longestItem:String;

            private var _param:BaseParameter;

            [Bindable]
            public function get param():BaseParameter
            {
                return _param;
            }

            public function set param(value:BaseParameter):void
            {
                _param = value;

                if (value)
                {
                    hasChoiceList = (param.choiceList && param.choiceList.length > 0);
                    if (hasChoiceList)
                    {
                        choiceListOptions = new ArrayList(param.choiceList);
                        longestItem = getLongestValue(param.choiceList);

                        preselectChoice(param.choiceList, param.defaultValue);
                    }
                }
            }

            private function preselectChoice(choiceList:Array, defaultValue:Object):void
            {
                var defaultValueIndex:int = param.choiceList.indexOf(param.defaultValue);
                if (defaultValueIndex > -1)
                {
                    selectedChoiceIndex = defaultValueIndex;
                }
            }

            private function getLongestValue(choiceList:Array):String
            {
                var longestChoice:String = "";
                var currentChoice:String;
                for each (var choice:String in choiceList)
                {
                    currentChoice = choice;
                    if (currentChoice.length > longestChoice.length)
                    {
                        longestChoice = currentChoice;
                    }
                }

                return longestChoice;
            }

            private function dropDown_changeHandler(event:IndexChangeEvent):void
            {
                param.defaultValue = choiceDropDownList.selectedItem;
            }
        ]]>
    </fx:Script>

    <s:FormItem label="{resourceManager.getString('BuilderStrings', 'geoprocessing.defaultValue')}">
        <s:TextInput width="60%"
                     includeInLayout="{!hasChoiceList}"
                     text="@{param.defaultValue}"
                     visible="{!hasChoiceList}"/>

        <s:DropDownList id="choiceDropDownList"
                        change="dropDown_changeHandler(event)"
                        dataProvider="{choiceListOptions}"
                        includeInLayout="{hasChoiceList}"
                        requireSelection="true"
                        selectedIndex="{selectedChoiceIndex}"
                        typicalItem="{longestItem}"
                        visible="{hasChoiceList}"/>
    </s:FormItem>
</s:Form>

